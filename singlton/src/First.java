//В этой реализации создается приватный конструктор, чтобы предотвратить создание экземпляров класса извне.
// Поле "instance" является статическим, что означает, что оно принадлежит классу, а не экземпляру класса,
// и доступно всегда. В поле "instance" создается единственный экземпляр класса "First" с помощью оператора "new"
// и ключевого слова "final", что гарантирует, что переменная "instance" не может быть изменена после ее инициализации.
//
//Эта реализация имеет преимущество перед реализацией с использованием ленивой инициализации,
// так как объект создается сразу при загрузке класса, что обеспечивает потокобезопасность и
// предотвращает возможность создания нескольких экземпляров класса. Также это более простой и
// понятный способ реализации синглтона.
//
//Однако, такая реализация имеет недостаток в том, что экземпляр класса создается независимо от того,
// нужен он нам или нет. Это может привести к ненужному расходованию ресурсов в случае,
// если объект создается с большими затратами на ресурсы. По этой причине, реализация с ленивой инициализацией
// может быть предпочтительнее, если создание объекта требует больших затрат на ресурсы.
public class First {
    private First() {}

    public static final First instance = new First();

}
